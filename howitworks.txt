1. Беру строку
2. Вывожу все символы до % с помощью ft_putchar
3. При нахождении % пропускаю символ и обрабатываю

Создается структура, которая имеет поле флаг
typedef	struct	s_list
{
	char	flag;
	int		width;
	int		presicion;
	int		length
	int		type;
	void	arg; (?)
}

!!! добавить еще поля, что бы хранить, например выравнивание или знак заполенния

3.1 Флаги (минус, плюс, хеш, зеро, спейс)
Если символ является одним из четырёх, то он обрабатываетс я и кладется в структуру
char - никакой флаг в одиночку ничего не меняет


3.2 Ширина (инт или звездочка)
Если символ является * - то он закосится в ширину, иначе запускается атои и результат заносится в ширину
char - без флагов - добавляет n пробелов слева
+ ничего
- вырвнивает по левому краю
' ' ничего
# ничего
0 заполняет пустоту нулями
* - ?


3.3 Точность (итн, зведочка, ничего)
Если символ ., то ищется *, если находится записывается, иначе запускается атои, результат записывается, если атои
ничего не возвращает, то записывается 0
char - не работает

3.4 Размер (чар или отсутствует)
Если символ находится в списке чаров, то он записывается в поле length.
???

3.5 Тип(чар)
Следущий чар записывается в параметр type.

4. Проверка возможной комбинации (?)

5.Проходусь по флагам. В правлиьном приоритете

..
..
..

Вывод  результата!

Читаю дальше строку, при необходимочсти начинаю с пункта 3.

/*
d, i
u
f, F
e, E
g, G
x, X
o
s
c
p
a, A
n
hh
h
l
ll
L
z
j
t
*/
// You have to manage the following conversions: diouxX with the following flags: hh, h, l and ll.
// You have to manage the following conversion: f with the following flags: l and L.
// You must manage %%
// You must manage the flags #0-+ and space
// You must manage the minimum field-width
// You must manage the precision
